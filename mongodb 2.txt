// creating the DB for zenClass

use zenClass

// creating collections in zenclass

db.createCollection("users")
db.createCollection("codekata")
db.createCollection("attendance")
db.createCollection("topics")
db.createCollection("tasks")
db.createCollection("company_drives")
db.createCollection("mentors")

// inserting all datas in each collection

Find all the topics and tasks taught in the month of October:

db.topics.find({"month":"october" })
db.tasks.find({ "date": { $gte: ISODate("2020-10-01T00:00:00Z"), $lte: ISODate("2020-10-31T23:59:59Z") } })

Find all the company drives between October 15, 2020, and October 31, 2020:

db.company_drives.find({ "date": { $gte: ISODate("2020-10-15T00:00:00Z"), $lte: ISODate("2020-10-31T23:59:59Z") } })

Find all the company drives and students who appeared for placement:

db.company_drives.find()
db.students_placements.find({"isAppearedForPlacements":true })

Find the number of problems solved by the user in codekata:

db.codekata.aggregate([
  { $match: { "user_id": ObjectId("user_id") } },
  { $group: { _id: null, total_problems_solved: { $sum: "$problems_solved" } } }
])

Find all the mentors with more than 15 mentees:

db.mentors.find({ $where: "this.mentees_count > 15" })

Find the number of users absent and tasks not submitted between October 15, 2020, and October 31, 2020:

db.attendance.find({ "date": { $gte: ISODate("2020-10-15T00:00:00Z"), $lte: ISODate("2020-10-31T23:59:59Z"), "status": "absent" } })
db.tasks.find({ "date": { $gte: ISODate("2020-10-15T00:00:00Z"), $lte: ISODate("2020-10-31T23:59:59Z"), "submitted": false } })




